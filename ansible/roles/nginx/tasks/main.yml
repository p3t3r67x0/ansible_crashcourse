---

- set_fact:
    appserver_private_address: "{{ hostvars['157.245.67.108'].ansible_eth1.ipv4.address }}"

- user:
    name: ubuntu
    password: "{{ ubuntu_webserver_password | password_hash('sha512', 'LJH32sk2') }}"
    shell: /bin/bash
    groups: sudo
    append: yes

- name: install certbot from ppa on ubuntu 18.04
  apt_repository:
    repo: ppa:certbot/certbot
    mode: '0644'
  when: ansible_distribution_release == 'bionic'

- name: ensure nginx, certbot, cron are installed
  apt:
    name: nginx, certbot, cron
    state: latest

- name: create letsencrypt directory
  file:
    name: /var/www/letsencrypt
    state: directory

- name: remove default nginx sites config files
  file:
    name: '{{ item }}'
    state: absent
  with_items:
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/sites-available/default

- name: add nginx config template
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: '0644'

- name: install nginx site for letsencrypt requests
  template:
    src: default.conf.j2
    dest: /etc/nginx/sites-enabled/default.conf
    mode: '0644'

- name: reload nginx to activate letsencrypt site
  service:
    name: nginx
    state: restarted
    enabled: yes

- name: check that the letsencrypt webapp directory exists
  stat:
    path: /etc/letsencrypt/live/{{ domain_webapp }}
  register: letsencrypt_webapp_result

- name: create letsencrypt certificate for webapp
  shell: certbot certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_webapp }}
  args:
    creates: /etc/letsencrypt/live/{{ domain_webapp }}
  when: not letsencrypt_webapp_result.stat.exists

- name: check that the letsencrypt backend directory exists
  stat:
    path: /etc/letsencrypt/live/{{ domain_backend }}
  register: letsencrypt_backend_result

- name: create letsencrypt certificate for backend
  shell: certbot certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_backend }}
  args:
    creates: /etc/letsencrypt/live/{{ domain_backend }}
  when: not letsencrypt_webapp_result.stat.exists

- name: check that the diffie-hellman parameters exists
  stat:
    path: /etc/nginx/dhparams.pem
  register: diffie_hellman_parameters_result

- name: generate diffie-hellman parameters
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem
  when: not diffie_hellman_parameters_result.stat.exists

- name: add letsencrypt cronjob for certificates renewal
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    job: certbot --renew-by-default certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_webapp }} -d {{ domain_backend }} && service nginx reload

- name: add webapp template to the nginx
  template:
    src: webapp.conf.j2
    dest: /etc/nginx/sites-available/webapp.conf
    mode: '0644'

- name: enable available sites to enabled sites
  file:
    src: /etc/nginx/sites-available/webapp.conf
    dest: /etc/nginx/sites-enabled/webapp.conf
    state: link

- name: add backend template to the nginx
  template:
    src: backend.conf.j2
    dest: /etc/nginx/sites-available/backend.conf
    mode: '0644'

- name: enable available sites to enabled sites
  file:
    src: /etc/nginx/sites-available/backend.conf
    dest: /etc/nginx/sites-enabled/backend.conf
    state: link

- name: remove default nginx config from enabled sites
  file:
    name: /etc/nginx/sites-enabled/default.conf
    state: absent

- name: reload nginx to activate webapp and backend
  service:
    name: nginx
    state: restarted
